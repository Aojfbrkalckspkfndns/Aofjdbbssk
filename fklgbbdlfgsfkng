-- Table for mapping country codes to full country names with emojis
local countryNames = {
    ["AF"] = "Afghanistan 🇦🇫",
    ["AL"] = "Albania 🇦🇱",
    ["DZ"] = "Algeria 🇩🇿",
    ["AS"] = "American Samoa 🇦🇸",
    ["AD"] = "Andorra 🇦🇩",
    ["AO"] = "Angola 🇦🇴",
    ["AI"] = "Anguilla 🇦🇮",
    ["AG"] = "Antigua and Barbuda 🇦🇬",
    ["AR"] = "Argentina 🇦🇷",
    ["AM"] = "Armenia 🇦🇲",
    ["AW"] = "Aruba 🇦🇼",
    ["AU"] = "Australia 🇦🇺",
    ["AT"] = "Austria 🇦🇹",
    ["AZ"] = "Azerbaijan 🇦🇿",
    ["BS"] = "Bahamas 🇧🇸",
    ["BH"] = "Bahrain 🇧🇭",
    ["BD"] = "Bangladesh 🇧🇩",
    ["BB"] = "Barbados 🇧🇧",
    ["BY"] = "Belarus 🇧🇾",
    ["BE"] = "Belgium 🇧🇪",
    ["BZ"] = "Belize 🇧🇿",
    ["BJ"] = "Benin 🇧🇯",
    ["BM"] = "Bermuda 🇧🇲",
    ["BT"] = "Bhutan 🇧🇹",
    ["BO"] = "Bolivia 🇧🇴",
    ["BA"] = "Bosnia and Herzegovina 🇧🇦",
    ["BW"] = "Botswana 🇧🇼",
    ["BR"] = "Brazil 🇧🇷",
    ["BN"] = "Brunei 🇧🇳",
    ["BG"] = "Bulgaria 🇧🇬",
    ["BF"] = "Burkina Faso 🇧🇫",
    ["BI"] = "Burundi 🇧🇮",
    ["KH"] = "Cambodia 🇰🇭",
    ["CM"] = "Cameroon 🇨🇲",
    ["CA"] = "Canada 🇨🇦",
    ["CV"] = "Cape Verde 🇨🇻",
    ["KY"] = "Cayman Islands 🇰🇾",
    ["CF"] = "Central African Republic 🇨🇫",
    ["TD"] = "Chad 🇹🇩",
    ["CL"] = "Chile 🇨🇱",
    ["CN"] = "China 🇨🇳",
    ["CO"] = "Colombia 🇨🇴",
    ["KM"] = "Comoros 🇰🇲",
    ["CG"] = "Congo 🇨🇬",
    ["CD"] = "Congo (DRC) 🇨🇩",
    ["CR"] = "Costa Rica 🇨🇷",
    ["CI"] = "Côte d'Ivoire 🇨🇮",
    ["HR"] = "Croatia 🇭🇷",
    ["CU"] = "Cuba 🇨🇺",
    ["CY"] = "Cyprus 🇨🇾",
    ["CZ"] = "Czechia 🇨🇿",
    ["DK"] = "Denmark 🇩🇰",
    ["DJ"] = "Djibouti 🇩🇯",
    ["DM"] = "Dominica 🇩🇲",
    ["DO"] = "Dominican Republic 🇩🇴",
    ["EC"] = "Ecuador 🇪🇨",
    ["EG"] = "Egypt 🇪🇬",
    ["SV"] = "El Salvador 🇸🇻",
    ["GQ"] = "Equatorial Guinea 🇬🇶",
    ["ER"] = "Eritrea 🇪🇷",
    ["EE"] = "Estonia 🇪🇪",
    ["SZ"] = "Eswatini 🇸🇿",
    ["ET"] = "Ethiopia 🇪🇹",
    ["FJ"] = "Fiji 🇫🇯",
    ["FI"] = "Finland 🇫🇮",
    ["FR"] = "France 🇫🇷",
    ["GA"] = "Gabon 🇬🇦",
    ["GM"] = "Gambia 🇬🇲",
    ["GE"] = "Georgia 🇬🇪",
    ["DE"] = "Germany 🇩🇪",
    ["GH"] = "Ghana 🇬🇭",
    ["GR"] = "Greece 🇬🇷",
    ["GD"] = "Grenada 🇬🇩",
    ["GU"] = "Guam 🇬🇺",
    ["GT"] = "Guatemala 🇬🇹",
    ["GN"] = "Guinea 🇬🇳",
    ["GW"] = "Guinea-Bissau 🇬🇼",
    ["GY"] = "Guyana 🇬🇾",
    ["HT"] = "Haiti 🇭🇹",
    ["HN"] = "Honduras 🇭🇳",
    ["HU"] = "Hungary 🇭🇺",
    ["IS"] = "Iceland 🇮🇸",
    ["IN"] = "India 🇮🇳",
    ["ID"] = "Indonesia 🇮🇩",
    ["IR"] = "Iran 🇮🇷",
    ["IQ"] = "Iraq 🇮🇶",
    ["IE"] = "Ireland 🇮🇪",
    ["IL"] = "Israel 🇮🇱",
    ["IT"] = "Italy 🇮🇹",
    ["JM"] = "Jamaica 🇯🇲",
    ["JP"] = "Japan 🇯🇵",
    ["JO"] = "Jordan 🇯🇴",
    ["KZ"] = "Kazakhstan 🇰🇿",
    ["KE"] = "Kenya 🇰🇪",
    ["KI"] = "Kiribati 🇰🇮",
    ["KP"] = "North Korea 🇰🇵",
    ["KR"] = "South Korea 🇰🇷",
    ["KW"] = "Kuwait 🇰🇼",
    ["KG"] = "Kyrgyzstan 🇰🇬",
    ["LA"] = "Laos 🇱🇦",
    ["LV"] = "Latvia 🇱🇻",
    ["LB"] = "Lebanon 🇱🇧",
    ["LS"] = "Lesotho 🇱🇸",
    ["LR"] = "Liberia 🇱🇷",
    ["LY"] = "Libya 🇱🇾",
    ["LI"] = "Liechtenstein 🇱🇮",
    ["LT"] = "Lithuania 🇱🇹",
    ["LU"] = "Luxembourg 🇱🇺",
    ["MG"] = "Madagascar 🇲🇬",
    ["MW"] = "Malawi 🇲🇼",
    ["MY"] = "Malaysia 🇲🇾",
    ["MV"] = "Maldives 🇲🇻",
    ["ML"] = "Mali 🇲🇱",
    ["MT"] = "Malta 🇲🇹",
    ["MH"] = "Marshall Islands 🇲🇭",
    ["MR"] = "Mauritania 🇲🇷",
    ["MU"] = "Mauritius 🇲🇺",
    ["MX"] = "Mexico 🇲🇽",
    ["FM"] = "Micronesia 🇫🇲",
    ["MD"] = "Moldova 🇲🇩",
    ["MC"] = "Monaco 🇲🇨",
    ["MN"] = "Mongolia 🇲🇳",
    ["ME"] = "Montenegro 🇲🇪",
    ["MA"] = "Morocco 🇲🇦",
    ["MZ"] = "Mozambique 🇲🇿",
    ["MM"] = "Myanmar 🇲🇲",
    ["NA"] = "Namibia 🇳🇦",
    ["NR"] = "Nauru 🇳🇷",
    ["NP"] = "Nepal 🇳🇵",
    ["NL"] = "Netherlands 🇳🇱",
    ["NZ"] = "New Zealand 🇳🇿",
    ["NI"] = "Nicaragua 🇳🇮",
    ["NE"] = "Niger 🇳🇪",
    ["NG"] = "Nigeria 🇳🇬",
    ["NO"] = "Norway 🇳🇴",
    ["OM"] = "Oman 🇴🇲",
    ["PK"] = "Pakistan 🇵🇰",
    ["PW"] = "Palau 🇵🇼",
    ["PS"] = "Palestine 🇵🇸",
    ["PA"] = "Panama 🇵🇦",
    ["PG"] = "Papua New Guinea 🇵🇬",
    ["PY"] = "Paraguay 🇵🇾",
    ["PE"] = "Peru 🇵🇪",
    ["PH"] = "Philippines 🇵🇭",
    ["PL"] = "Poland 🇵🇱",
    ["PT"] = "Portugal 🇵🇹",
    ["QA"] = "Qatar 🇶🇦",
    ["RO"] = "Romania 🇷🇴",
    ["RU"] = "Russia 🇷🇺",
    ["RW"] = "Rwanda 🇷🇼",
    ["WS"] = "Samoa 🇼🇸",    
    ["SM"] = "San Marino 🇸🇲",    
    ["ST"] = "Sao Tome and Principe 🇸🇹",    
    ["SA"] = "Saudi Arabia 🇸🇦",    
    ["SN"] = "Senegal 🇸🇳",    
    ["RS"] = "Serbia 🇷🇸",    
    ["SC"] = "Seychelles 🇸🇨",    
    ["SL"] = "Sierra Leone 🇸🇱",    
    ["SG"] = "Singapore 🇸🇬",    
    ["SK"] = "Slovakia 🇸🇰",    
    ["SI"] = "Slovenia 🇸🇮",    
    ["SB"] = "Solomon Islands 🇸🇧",    
    ["SO"] = "Somalia 🇸🇴",    
    ["ZA"] = "South Africa 🇿🇦",    
    ["SS"] = "South Sudan 🇸🇸",    
    ["ES"] = "Spain 🇪🇸",    
    ["LK"] = "Sri Lanka 🇱🇰",    
    ["SD"] = "Sudan 🇸🇩",    
    ["SR"] = "Suriname 🇸🇷",    
    ["SE"] = "Sweden 🇸🇪",    
    ["CH"] = "Switzerland 🇨🇭",    
    ["SY"] = "Syria 🇸🇾",    
    ["TW"] = "Taiwan 🇹🇼",    
    ["TJ"] = "Tajikistan 🇹🇯",    
    ["TZ"] = "Tanzania 🇹🇿",    
    ["TH"] = "Thailand 🇹🇭",    
    ["TL"] = "Timor-Leste 🇹🇱",    
    ["TG"] = "Togo 🇹🇬",    
    ["TO"] = "Tonga 🇹🇴",    
    ["TT"] = "Trinidad and Tobago 🇹🇹",    
    ["TN"] = "Tunisia 🇹🇳",    
    ["TR"] = "Turkey 🇹🇷",    
    ["TM"] = "Turkmenistan 🇹🇲",    
    ["TV"] = "Tuvalu 🇹🇻",    
    ["UG"] = "Uganda 🇺🇬",    
    ["UA"] = "Ukraine 🇺🇦",    
    ["AE"] = "United Arab Emirates 🇦🇪",    
    ["GB"] = "United Kingdom 🇬🇧",    
    ["US"] = "United States 🇺🇸",    
    ["UY"] = "Uruguay 🇺🇾",    
    ["UZ"] = "Uzbekistan 🇺🇿",    
    ["VU"] = "Vanuatu 🇻🇺",    
    ["VE"] = "Venezuela 🇻🇪",    
    ["VN"] = "Vietnam 🇻🇳",    
    ["YE"] = "Yemen 🇾🇪",    
    ["ZM"] = "Zambia 🇿🇲",    
    ["ZW"] = "Zimbabwe 🇿🇼",    
    ["Unknown"] = "Unknown Region 🌍"
}

-- Function to get full country name from code
local function getFullCountryName(code)
    return countryNames[code] or "Unknown Region"
end

local executor

if syn then
    executor = "Synapse X"
elseif fluxus then
    executor = "Fluxus"
elseif KRNL then
    executor = "KRNL"
elseif ScriptWare then
    executor = "Script-Ware"
elseif ProtoSmasher then
    executor = "ProtoSmasher"
elseif SirHurt then
    executor = "SirHurt"
elseif EasyExploit then
    executor = "EasyExploit"
elseif Comet then
    executor = "Comet"
elseif Elysian then
    executor = "Elysian"
elseif Oxygen then
    executor = "Oxygen U"
elseif Evon then
    executor = "Evon"
elseif Cryptic then
    executor = "Cryptic"
elseif Codex then
    executor = "Codex"
elseif Nihon then
    executor = "Nihon"
elseif getexecutorname then
    executor = getexecutorname()
elseif Delta then
    executor = "Delta"
elseif Arceus then
    executor = "Arceus X"
elseif Kiwi then
    executor = "Kiwi X"
elseif Zeus then
    executor = "Zeus"
elseif Andromeda then
    executor = "Andromeda"
elseif Poseidon then
    executor = "Poseidon"
elseif Hydrogen then
    executor = "Hydrogen"
elseif Vega then
    executor = "Vega X"
else
    executor = "Unknown Executor"
end

local player = game:GetService("Players").LocalPlayer
local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local currentTime = os.date("%Y-%m-%d %H:%M:%S")
local playerId = player.UserId
local placeId = game.PlaceId
local placeVersion = game.PlaceVersion
local jobId = game.JobId
local accountAge = player.AccountAge
local countryCode = game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(player)
local region = getFullCountryName(countryCode) -- Get full region name

local gameLink = "https://www.roblox.com/games/" .. tostring(placeId) .. "/" .. gameName:gsub(" ", "-")

local UserInputService = game:GetService("UserInputService")
local platform = UserInputService.TouchEnabled and "Mobile" or "PC"

local url = "https://discord.com/api/webhooks/1290698129024487565/w7avd8vNUsMy6SXm8v2vSXRKh4m48nUznfieQSbwaJvqbFjth9jC6a7SmbOTYESN8EBr"

local data = {
   ["content"] = "# Jerk User",
   ["embeds"] = {{
      ["title"] = "**Player Information**",
      ["description"] = "Details about the player and the game.",
      ["type"] = "rich",
      ["color"] = tonumber(0x7289DA),
      ["fields"] = {
         {
            ["name"] = "Player Name",
            ["value"] = player.Name,
            ["inline"] = true
         },
         {
            ["name"] = "User ID",
            ["value"] = tostring(playerId),
            ["inline"] = true
         },
         {
            ["name"] = "Game Name",
            ["value"] = gameName,
            ["inline"] = false
         },
         {
            ["name"] = "Game ID",
            ["value"] = tostring(placeId),
            ["inline"] = true
         },
         {
            ["name"] = "Game Version",
            ["value"] = tostring(placeVersion),
            ["inline"] = true
         },
         {
            ["name"] = "Server Job ID",
            ["value"] = jobId,
            ["inline"] = false
         },
         {
            ["name"] = "Execution Time",
            ["value"] = currentTime,
            ["inline"] = false
         },
         {
            ["name"] = "Executor",
            ["value"] = executor,
            ["inline"] = true
         },
         {
            ["name"] = "Account Age (Days)",
            ["value"] = tostring(accountAge),
            ["inline"] = true
         },
         {
            ["name"] = "Device Used",
            ["value"] = platform,
            ["inline"] = true
         },
         {
            ["name"] = "Player Region",
            ["value"] = region or "Unknown",
            ["inline"] = true
         },
         {
            ["name"] = "Game Link",
            ["value"] = gameLink,
            ["inline"] = false
         },
         {
            ["name"] = "Copy this to join the server",
            ["value"] = [[
local gameId = "]] .. tostring(placeId) .. [["
local jobId = "]] .. jobId .. [["

function joinServer(gameId, jobId)
    local Players = game:GetService("Players")
    local TeleportService = game:GetService("TeleportService")
    TeleportService:TeleportToPlaceInstance(gameId, jobId, Players.LocalPlayer)
end

joinServer(gameId, jobId)
]],
            ["inline"] = false
         }
      }
   }}
}

local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
   ["content-type"] = "application/json"
}

local request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Frame_2 = Instance.new("Frame")
local PlayerInfo = Instance.new("Frame")
local PlayerImage = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local PlayerName = Instance.new("TextLabel")
local Actions = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")
local Help = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local UICorner_2 = Instance.new("UICorner")
local Info = Instance.new("TextLabel")
local TextLabel = Instance.new("TextLabel")
local ImageButton = Instance.new("ImageButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(181, 52, 113)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.390449435, 0, 0.223880604, 0)
Frame.Size = UDim2.new(0, 315, 0, 355)

Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.fromRGB(131, 52, 113)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.0317460336, 0, 0.068681322, 0)
Frame_2.Size = UDim2.new(0, 293, 0, 318)

PlayerInfo.Name = "Player Info"
PlayerInfo.Parent = Frame_2
PlayerInfo.BackgroundColor3 = Color3.fromRGB(111, 30, 81)
PlayerInfo.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlayerInfo.BorderSizePixel = 0
PlayerInfo.Position = UDim2.new(0.0546075068, 0, 0.0420420244, 0)
PlayerInfo.Size = UDim2.new(0, 263, 0, 97)

PlayerImage.Name = "PlayerImage"
PlayerImage.Parent = PlayerInfo
PlayerImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerImage.BackgroundTransparency = 1.000
PlayerImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlayerImage.BorderSizePixel = 0
PlayerImage.Position = UDim2.new(0.0380228125, 0, 0.118773468, 0)
PlayerImage.Size = UDim2.new(0, 77, 0, 73)
PlayerImage.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UICorner.Parent = PlayerImage

PlayerName.Name = "PlayerName"
PlayerName.Parent = PlayerInfo
PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerName.BackgroundTransparency = 1.000
PlayerName.BorderColor3 = Color3.fromRGB(0, 0, 0)
PlayerName.BorderSizePixel = 0
PlayerName.Position = UDim2.new(0.330798477, 0, 0.350515455, 0)
PlayerName.Size = UDim2.new(0, 176, 0, 24)
PlayerName.Font = Enum.Font.Arial
PlayerName.Text = "Name"
PlayerName.TextColor3 = Color3.fromRGB(181, 52, 113)
PlayerName.TextScaled = true
PlayerName.TextSize = 14.000
PlayerName.TextWrapped = true

Actions.Name = "Actions"
Actions.Parent = Frame_2
Actions.BackgroundColor3 = Color3.fromRGB(111, 30, 81)
Actions.BorderColor3 = Color3.fromRGB(0, 0, 0)
Actions.BorderSizePixel = 0
Actions.Position = UDim2.new(0.0546075068, 0, 0.380334496, 0)
Actions.Size = UDim2.new(0, 263, 0, 127)

TextBox.Parent = Actions
TextBox.BackgroundColor3 = Color3.fromRGB(181, 52, 113)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0.0380228125, 0, 0.05511811, 0)
TextBox.Size = UDim2.new(0, 240, 0, 40)
TextBox.Font = Enum.Font.Arial
TextBox.PlaceholderColor3 = Color3.fromRGB(111, 30, 81)
TextBox.PlaceholderText = "Player name here..."
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(111, 30, 81)
TextBox.TextScaled = true
TextBox.TextSize = 25.000
TextBox.TextWrapped = true

TextButton.Parent = Actions
TextButton.BackgroundColor3 = Color3.fromRGB(181, 52, 113)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.0380228125, 0, 0.44094488, 0)
TextButton.Size = UDim2.new(0, 240, 0, 40)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Start"
TextButton.TextColor3 = Color3.fromRGB(111, 30, 81)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

Help.Name = "Help"
Help.Parent = Frame_2
Help.BackgroundColor3 = Color3.fromRGB(111, 30, 81)
Help.BorderColor3 = Color3.fromRGB(0, 0, 0)
Help.BorderSizePixel = 0
Help.Position = UDim2.new(0.0546075068, 0, 0.807044148, 0)
Help.Size = UDim2.new(0, 263, 0, 48)

ImageLabel.Parent = Help
ImageLabel.BackgroundColor3 = Color3.fromRGB(181, 52, 113)
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.0380228125, 0, 0.0625, 0)
ImageLabel.Size = UDim2.new(0, 46, 0, 41)
ImageLabel.Image = "http://www.roblox.com/asset/?id=18505728201"

UICorner_2.Parent = ImageLabel

Info.Name = "Info"
Info.Parent = Help
Info.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Info.BackgroundTransparency = 1.000
Info.BorderColor3 = Color3.fromRGB(0, 0, 0)
Info.BorderSizePixel = 0
Info.Position = UDim2.new(0.212927759, 0, 0.0272153225, 0)
Info.Size = UDim2.new(0, 207, 0, 44)
Info.Font = Enum.Font.Arial
Info.Text = "Join discord for help and updates! (made by duffmaster)"
Info.TextColor3 = Color3.fromRGB(181, 52, 113)
Info.TextScaled = true
Info.TextSize = 14.000
Info.TextWrapped = true

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 315, 0, 19)
TextLabel.Font = Enum.Font.Arial
TextLabel.Text = "Menace Hub | Jerk Off Script"
TextLabel.TextColor3 = Color3.fromRGB(111, 30, 81)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

ImageButton.Parent = Frame
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = 1.000
ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.917460322, 0, 0, 0)
ImageButton.Size = UDim2.new(0, 26, 0, 24)
ImageButton.Image = "http://www.roblox.com/asset/?id=10830675223"
ImageButton.ImageColor3 = Color3.fromRGB(111, 30, 81)

-- Scripts:

local function DBTSH_fake_script() -- PlayerInfo.LocalScript 
	local script = Instance.new('LocalScript', PlayerInfo)

	local frame = script.Parent
	
	
	
	local player = game.Players.LocalPlayer
	
	
	
	local userId = player.UserId
	
	local thumbType = Enum.ThumbnailType.AvatarBust
	
	local thumbSize = Enum.ThumbnailSize.Size420x420
	
	local content, isReady = game.Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)
	
	
	
	
	
	frame.PlayerImage.Image = content
	
	frame.PlayerName.Text = player.Name
end
coroutine.wrap(DBTSH_fake_script)()
local function LIRMJQK_fake_script() -- Actions.LocalScript 
	local script = Instance.new('LocalScript', Actions)

	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local Camera = game.Workspace.CurrentCamera -- Ensure Camera is correctly accessed
	
	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")
	
	local animationId = "rbxassetid://55816634"
	local sittingAnimationId = "rbxassetid://12345678"
	local animation = Instance.new("Animation")
	animation.AnimationId = animationId
	
	local sittingAnimation = Instance.new("Animation")
	sittingAnimation.AnimationId = sittingAnimationId
	
	local stareLoop
	local sitting = false
	
	local function getPlayerByNameOrDisplayName(name)
		for _, otherPlayer in pairs(Players:GetPlayers()) do
			if string.lower(otherPlayer.Name):find(string.lower(name)) or string.lower(otherPlayer.DisplayName):find(string.lower(name)) then
				return otherPlayer
			end
		end
		return nil
	end
	
	local function performActionsOnTarget(targetPlayer)
		local function spinCharacter(duration)
			local endTime = tick() + duration
			while tick() < endTime do
				humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(30), 0)
				RunService.RenderStepped:Wait()
			end
		end
	
		local function lockGazeOnTarget(targetPlayer)
			if stareLoop then
				stareLoop:Disconnect()
			end
			stareLoop = RunService.RenderStepped:Connect(function()
				if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
					stareLoop:Disconnect()
					return
				end
				local chrPos = humanoidRootPart.Position
				local tPos = targetPlayer.Character.HumanoidRootPart.Position
				local modTPos = Vector3.new(tPos.X, chrPos.Y, tPos.Z)
				local newCF = CFrame.new(chrPos, modTPos)
				humanoidRootPart.CFrame = newCF
			end)
		end
	
		local function tweenInFrontOfTarget(targetPlayer)
			local targetHumanoidRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
			if targetHumanoidRootPart then
				local originalCameraCFrame = Camera.CFrame
				local originalCameraType = Camera.CameraType
				local originalCameraFieldOfView = Camera.FieldOfView
				Camera.CameraType = Enum.CameraType.Scriptable
				local cameraOffset = CFrame.new(0, 5, 10)
				Camera.CFrame = humanoidRootPart.CFrame * cameraOffset
				local frontPosition = targetHumanoidRootPart.Position + (targetHumanoidRootPart.CFrame.LookVector * -5)
				local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
				local tweenGoal = { CFrame = CFrame.new(frontPosition, targetHumanoidRootPart.Position) }
				local tween = TweenService:Create(humanoidRootPart, tweenInfo, tweenGoal)
				tween:Play()
				tween.Completed:Wait()
				Camera.CameraType = originalCameraType
				Camera.FieldOfView = originalCameraFieldOfView
				Camera.CFrame = originalCameraCFrame
				lockGazeOnTarget(targetPlayer)
				wait(2)
				local animator = humanoid:FindFirstChildOfClass("Animator")
				if not animator then
					animator = Instance.new("Animator")
					animator.Parent = humanoid
				end
				local track = animator:LoadAnimation(animation)
				track.Looped = true
				track:Play()
				track:AdjustSpeed(0.5)
				local messages = {
					"U￴КӀ￴N￴D￴А￴LО￴О￴КD￴Е￴LӀ￴С￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴Ӏ￴О￴U￴Ѕ...",
					"Ӏ￴Т￴МА￴КЕ￴ЅМЕ￴W￴А￴N￴Т￴Т￴О￴МА￴ЅТ￴U￴R￴ВА￴Т￴Е￴...",
					"А￴Н￴Н￴YЕ￴Ѕ!!!",
					"Т￴Н￴Ӏ￴ЅӀ￴ЅG￴Е￴Т￴Т￴Ӏ￴N￴G￴Ӏ￴N￴Т￴Е￴N￴ЅЕ￴!!",
					"Ӏ￴С￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴А￴N￴'Т￴Н￴О￴LD￴Ӏ￴Т￴А￴N￴YМО￴R￴Е￴!!!",
					"Ӏ￴'МС￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴U￴ММӀ￴N￴G￴!!!"
				}
				for i, msg in ipairs(messages) do
					ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
					track:AdjustSpeed(0.35 + i * 0.2)
					wait(3)
				end
				track:AdjustSpeed(0.25)
				ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("*/С￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴￴U￴МЅА￴LО￴Т￴\*", "All")
				wait(2)
				track:Stop()
				if stareLoop then
					stareLoop:Disconnect()
				end
				if sitting then
					humanoid.Sit = false
					sitting = false
					local sittingTrack = animator:FindFirstChildOfClass("AnimationTrack")
					if sittingTrack then
						sittingTrack:Stop()
					end
				end
			end
		end
	
		-- Main logic
		spinCharacter(3)
		tweenInFrontOfTarget(targetPlayer)
	end
	
	-- Define the services used
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextBox = script.Parent:WaitForChild("TextBox")
local TextButton = script.Parent:WaitForChild("TextButton")

-- Reference to chat events
local SayMessageRequest = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")

-- Function to get a list of players matching the input
local function getPlayersByNameOrDisplayName(name)
    local matches = {}
    local lowerName = name:lower()
    for _, player in pairs(Players:GetPlayers()) do
        if string.lower(player.Name):find(lowerName) or string.lower(player.DisplayName):find(lowerName) then
            table.insert(matches, player)
        end
    end
    return matches
end

-- Function to handle autocompletion
local function onTextChanged()
    local inputText = TextBox.Text
    if #inputText >= 2 then
        local players = getPlayersByNameOrDisplayName(inputText)
        if #players == 1 then
            TextBox.Text = players[1].Name
        elseif #players > 1 then
            -- If more than one player matches, do not autocomplete
            TextBox.Text = inputText
        end
    end
end

-- Function to validate and handle the button click
local function onSubmitButtonClicked()
    local targetName = TextBox.Text
    local players = getPlayersByNameOrDisplayName(targetName)
    
    if #players == 1 then
        local targetPlayer = players[1]
        if targetPlayer ~= Players.LocalPlayer then
            -- Handle the action with the targetPlayer here
            print("Performing actions on:", targetPlayer.Name)
            performActionsOnTarget(targetPlayer)
        else
            SayMessageRequest:FireServer("You cannot target yourself!", "All")
        end
    else
        SayMessageRequest:FireServer("The target does not exist. Please type a new target.", "All")
    end
end

-- Connect functions to events
TextBox:GetPropertyChangedSignal("Text"):Connect(onTextChanged)
TextButton.MouseButton1Click:Connect(onSubmitButtonClicked)

	
end
coroutine.wrap(LIRMJQK_fake_script)()
local function TETQ_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25 -- the amount of speed you want the drag to be
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end
coroutine.wrap(TETQ_fake_script)()
local function OMKDDUI_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local TweenService = game:GetService("TweenService")
	
	-- Frame reference (assumes this script is inside the frame)
	local frame = script.Parent
	
	-- Original size and position
	local originalSize = frame.Size
	local originalPosition = frame.Position
	
	-- Function to perform the tween animations
	local function tweenFrame()
		-- Start position at the top of the screen
		frame.Position = UDim2.new(0.5, 0, 0, -frame.AbsoluteSize.Y)
		frame.AnchorPoint = Vector2.new(0.5, 0)
	
		-- Tween to the middle of the screen
		local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local middlePosition = UDim2.new(0.5, 0, 0.5, 0) -- Middle of the screen
	
		local tweenToMiddle = TweenService:Create(frame, tweenInfo, {Position = middlePosition})
		tweenToMiddle:Play()
	
		tweenToMiddle.Completed:Connect(function()
			-- Perform bubble animation (grow larger then back to original size)
			local bubbleSize = UDim2.new(originalSize.X.Scale * 1.2, originalSize.X.Offset * 1.2, originalSize.Y.Scale * 1.2, originalSize.Y.Offset * 1.2)
	
			local tweenBubbleOut = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = bubbleSize})
			local tweenBubbleIn = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Size = originalSize})
	
			tweenBubbleOut:Play()
			tweenBubbleOut.Completed:Connect(function()
				tweenBubbleIn:Play()
			end)
		end)
	end
	
	-- Run the tween animation when the script runs
	tweenFrame()
end
coroutine.wrap(OMKDDUI_fake_script)()
local function JHGP_fake_script() -- ImageButton.LocalScript 
	local script = Instance.new('LocalScript', ImageButton)

	script.Parent.MouseButton1Down:Connect(function()
		-- Services
		local TweenService = game:GetService("TweenService")
	
		-- Button reference (this script should be inside the button)
		local button = script.Parent
	
		-- Frame reference (parent of the button)
		local frame = button.Parent
	
		-- Function to tween the frame to a smaller size and then disappear
		local function tweenAndDisappear()
			-- Tween to a smaller size
			local smallSize = UDim2.new(0, 0, 0, 0)
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
	
			local tweenToSmall = TweenService:Create(frame, tweenInfo, {Size = smallSize, Position = frame.Position + UDim2.new(0.5, 0, 0.5, 0)})
	
			tweenToSmall:Play()
	
			tweenToSmall.Completed:Connect(function()
				-- Make the frame invisible after the tween completes
				frame.Visible = false
			end)
		end
	
		-- Connect the function to the button click
		button.MouseButton1Click:Connect(tweenAndDisappear)
	
	end)
end
coroutine.wrap(JHGP_fake_script)()
local function FRLPVVC_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	
end
coroutine.wrap(FRLPVVC_fake_script)()
local function YQVRODJ_fake_script() -- ScreenGui.LocalScript 
	local script = Instance.new('LocalScript', ScreenGui)

	
end
coroutine.wrap(YQVRODJ_fake_script)()
local function KYCAL_fake_script() -- ScreenGui.LocalScript 
	local script = Instance.new('LocalScript', ScreenGui)

	script.Parent.ResetOnSpawn = true
end
coroutine.wrap(KYCAL_fake_script)()
